<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans

	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd
	http://www.springframework.org/schema/security/oauth2
	http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd">

	<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager"
		  xmlns="http://www.springframework.org/schema/security" use-expressions="false">
		<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<!--For http request parameter based authentication-->
		<custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
		<csrf disabled="true" />
	</http>




	<http pattern="/api/**" create-session="never" entry-point-ref="oauthAuthenticationEntryPoint"
		  access-decision-manager-ref="accessDecisionManager" xmlns="http://www.springframework.org/schema/security">
		<anonymous enabled="false" />
		<intercept-url pattern="/api/**" access="ROLE_USER" />
		<custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>


	<beans:bean id="oauthAuthenticationEntryPoint"
				class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="realmName" value="patest" />
	</beans:bean>

	<beans:bean id="clientAuthenticationEntryPoint"
				class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="realmName" value="patest/client" />
		<beans:property name="typeName" value="Basic" />
	</beans:bean>

	<beans:bean id="oauthAccessDeniedHandler"
				class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<beans:bean id="clientCredentialsTokenEndpointFilter"
				class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="clientAuthenticationManager" />
	</beans:bean>

	<beans:bean id="accessDeniedManager" class="org.springframework.security.access.vote.UnanimousBased"
				xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</beans:bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
		  xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>



	<authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>

	<authentication-manager alias="authenticationManager"
							xmlns="http://www.springframework.org/schema/security">
		<authentication-provider>
			<user-service id="userDetailsService">
				<user name="admin" password="password" authorities="ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="clientDetailsUserService"
				class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetails" />
	</beans:bean>


	<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

	<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="supportRefreshToken" value="true" />
		<beans:property name="clientDetailsService" ref="clientDetails" />
		<beans:property name="accessTokenValiditySeconds" value="30" />
	</beans:bean>

	<beans:bean id="requestFactory"
		  class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
		<beans:constructor-arg name="clientDetailsService" ref="clientDetails" />
	</beans:bean>

	<beans:bean id="userApprovalHandler"
				class="org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="requestFactory" ref="requestFactory" />
	</beans:bean>

	<oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices"
								user-approval-handler-ref="userApprovalHandler">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter" resource-id="patest" token-services-ref="tokenServices" />

	<oauth:client-details-service id="clientDetails">
		<oauth:client client-id="my-trusted-client" authorized-grant-types="password,authorization_code,refresh-token,implicit,redirect-uri"
					  authorities="ROLE_CLIENT,ROLE_TRUSTED_CLIENT"
					  redirect-uri="/web"
					  scope="read,write,trust"
					  access-token-validity="30"
					  refresh-token-validity="600" />
	</oauth:client-details-service>


	<global-method-security pre-post-annotations="enabled" proxy-target-class="true">
		<expression-handler ref="oauthExpressionHandler" />
	</global-method-security>
	<oauth:expression-handler id="oauthExpressionHandler" />
	<oauth:web-expression-handler id="oauthWEBExpressionHandler" />
	<!--<http auto-config="true">
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/api**" access="isAnonymous()" />
        <csrf disabled="true" />
    </http>-->


</beans:beans>
